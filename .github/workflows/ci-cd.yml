name: CI-CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean install

      - name: Run tests
        run: mvn test

      - name: Package the application
        run: mvn package

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: target/*.jar

      - name: Run avaliacao build
        run: |
          cd ./avaliacao
          chmod +x ./mvnw
          chmod +x ./build.sh
          ./build.sh
      - name: Run compra build
        run: |
          cd ./compra
          chmod +x ./mvnw
          chmod +x ./build.sh
          ./build.sh
      - name: Run conta build
        run: |
          cd ./conta
          chmod +x ./mvnw
          chmod +x ./build.sh
          ./build.sh
      - name: Run empresa build
        run: |
          cd ./empresa
          chmod +x ./mvnw
          chmod +x ./build.sh
          ./build.sh
      - name: Run jogador build
        run: |
          cd ./jogador
          chmod +x ./mvnw
          chmod +x ./build.sh
          ./build.sh
      - name: Run jogo build
        run: |
          cd ./jogo
          chmod +x ./mvnw
          chmod +x ./build.sh
          ./build.sh
      - name: Run usuario build
        run: |
          cd ./usuario
          chmod +x ./mvnw
          chmod +x ./build.sh
          ./build.sh          

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: app

      - name: Deploy to server
        run: |
          # Comandos para fazer o deploy do JAR para o servidor
          # Isso pode envolver copiar o JAR para o servidor e reiniciar a aplicação
          scp target/*.jar user@server:/path/to/deploy/
          ssh user@server 'sudo systemctl restart myapp'