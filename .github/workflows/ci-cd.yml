name: CI-CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build and Package all microservices
        run: |
          # List of microservices directories
          services=(avaliacao compra conta empresa jogador jogo usuario)

          # Build each microservice
          for service in "${services[@]}"; do
            echo "Building microservice: $service"
            cd ./Micro/$service
            chmod +x ./mvnw
            chmod +x ./build.sh
            ./build.sh
            cd ../../
          done

      - name: Upload JAR artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: |
            Micro/avaliacao/target/*.jar
            Micro/compra/target/*.jar
            Micro/conta/target/*.jar
            Micro/empresa/target/*.jar
            Micro/jogador/target/*.jar
            Micro/jogo/target/*.jar
            Micro/usuario/target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download JAR artifacts
        uses: actions/download-artifact@v3
        with:
          name: app

      - name: Deploy to server
        run: |
          # Comandos para fazer o deploy dos JARs para o servidor
          # Isso pode envolver copiar os JARs para o servidor e reiniciar as aplicações
          for file in $(find Micro -name "*.jar"); do
            echo "Deploying $file"
            scp $file user@server:/path/to/deploy/
          done
          ssh user@server 'sudo systemctl restart myapp'